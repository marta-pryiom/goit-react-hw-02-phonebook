{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","console","log","s","ContactForm","state","name","number","shortNameId","uuidv4","shortTelId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","obj","props","onSubmit","reset","this","className","Container","Form","htmlFor","FormTitle","FormInput","id","type","pattern","title","onChange","required","FormBtn","Component","ContactList","contacts","onDeleteContact","map","ContactItem","Text","onClick","Filter","filter","FilterTitle","App","addContacts","info","el","includes","alert","newContact","prev","deleteContact","contactId","contact","setFilteredContacts","target","getVisibleContacts","toLowerCase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,KAAO,0BAA0B,UAAY,+BAA+B,QAAU,6BAA6B,UAAY,iC,mBCA5LD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,8B,gNCKhEC,QAAQC,IAAIC,K,IAENC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAEVC,YAAcC,c,EACdC,WAAaD,c,EACbE,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MACd,EAAKC,SAAL,eACGT,EAAOQ,K,EAGZE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,MAAyB,EAAKZ,MACxBa,EAAM,CACVZ,KAFF,EAAQA,KAGNC,OAHF,EAAcA,QAKd,EAAKY,MAAMC,SAASF,GACpB,EAAKG,S,2CAGP,WACEC,KAAKP,SAAS,CACZT,KAAM,GACNC,OAAQ,O,oBAIZ,WACE,IAAQS,EAAwDM,KAAxDN,aAAcR,EAA0Cc,KAA1Cd,YAAaG,EAA6BW,KAA7BX,aAAcD,EAAeY,KAAfZ,WACjD,EAAyBY,KAAKjB,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,qBAAKgB,UAAWpB,IAAEqB,UAAlB,SACE,uBAAMD,UAAWpB,IAAEsB,KAAML,SAAUJ,EAAnC,UACE,uBAAOU,QAASlB,EAAae,UAAWpB,IAAEwB,UAA1C,kBAGA,uBACEJ,UAAWpB,IAAEyB,UACbd,MAAOR,EACPuB,GAAIrB,EACJsB,KAAK,OACLxB,KAAK,OACLyB,QAAQ,yHACRC,MAAM,kcACNC,SAAUtB,EACVuB,UAAQ,IAEV,uBAAOR,QAAShB,EAAYa,UAAWpB,IAAEwB,UAAzC,oBAGA,uBACEJ,UAAWpB,IAAEyB,UACbd,MAAOP,EACPsB,GAAInB,EACJoB,KAAK,MACLxB,KAAK,SACLyB,QAAQ,yFACRC,MAAM,giBACNC,SAAUtB,EACVuB,UAAQ,IAEV,wBAAQJ,KAAK,SAASP,UAAWpB,IAAEgC,QAAnC,kC,GAjEgBC,aA8EXhC,I,gBC3DAiC,EAzBK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/B,OACE,oBAAIhB,UAAWpB,IAAEkC,YAAjB,SACGC,EAASE,KAAI,gBAAGlC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQsB,EAAjB,EAAiBA,GAAjB,OACZ,qBAAaA,GAAI1B,IAAEsC,YAAnB,UACE,oBAAGlB,UAAWpB,IAAEuC,KAAhB,UAAuBpC,EAAvB,OACA,mBAAGiB,UAAWpB,IAAEuC,KAAhB,SAAuBnC,IACvB,wBAAQuB,KAAK,SAASa,QAAS,kBAAMJ,EAAgBV,IAArD,sBAHOA,S,iBCQFe,EAZA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQZ,EAAe,EAAfA,SACxB,OACE,sBAAKV,UAAWpB,IAAEyC,OAAlB,UACE,uBAAOrB,UAAWpB,IAAE2C,YAApB,mCACA,uBAAOhB,KAAK,OAAOxB,KAAK,OAAOQ,MAAO+B,EAAQZ,SAAUA,QCCxDc,G,kNACJ1C,MAAQ,CACNiC,SAAU,CACR,CAAET,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEsB,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,cAEhDsC,OAAQ,I,EAGVG,YAAc,SAAAC,GAKZ,GAJuB,EAAK5C,MAAMiC,SAC/BE,KAAI,SAAAU,GAAE,OAAIA,EAAG5C,QACb6C,SAASF,EAAK3C,MAGf8C,MAAM,GAAD,OAAIH,EAAK3C,KAAT,gCACA,CACL,IAAM+C,EAAU,2BAAQJ,GAAR,IAAcpB,GAAIpB,gBAClC,EAAKM,UAAS,SAAAuC,GAAI,MAAK,CACrBhB,SAAS,CAAEe,GAAH,mBAAkBC,EAAKhB,iB,EAIrCiB,cAAgB,SAAAC,GACd,EAAKzC,UAAS,SAAAuC,GAAI,MAAK,CACrBhB,SAAUgB,EAAKhB,SAASO,QAAO,SAAAY,GAAO,OAAIA,EAAQ5B,KAAO2B,U,EAG7DE,oBAAsB,SAAA9C,GACpB,EAAKG,SAAS,CAAE8B,OAAQjC,EAAE+C,OAAO7C,S,EAEnC8C,mBAAqB,WACnB,MAA6B,EAAKvD,MAA1BiC,EAAR,EAAQA,SAAUO,EAAlB,EAAkBA,OAElB,OAAOP,EAASO,QAAO,SAAAP,GAAQ,OAC7BA,EAAShC,KAAKuD,cAAcV,SAASN,EAAOgB,mB,4CAGhD,WACE,IACEb,EAIE1B,KAJF0B,YACAU,EAGEpC,KAHFoC,oBACAE,EAEEtC,KAFFsC,mBACAL,EACEjC,KADFiC,cAEF,OACE,gCACE,2CACA,cAAC,EAAD,CAAanC,SAAU4B,IACvB,0CACA,cAAC,EAAD,CAAQH,OAAQvB,KAAKjB,MAAMwC,OAAQZ,SAAUyB,IAC7C,cAAC,EAAD,CACEpB,SAAUsB,IACVrB,gBAAiBgB,W,GAvDTnB,cA8DHW,ICzDAe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfA/D,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,KAAO,6B","file":"static/js/main.037dc1d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactForm_Container__2Jwfv\",\"Form\":\"ContactForm_Form__2_MGq\",\"FormTitle\":\"ContactForm_FormTitle__36Kqb\",\"FormBtn\":\"ContactForm_FormBtn__1XCrm\",\"FormInput\":\"ContactForm_FormInput__2IyQ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__399Hu\",\"FilterTitle\":\"Filter_FilterTitle__uElIm\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n// import shortid from 'shortid';\r\n\r\nconsole.log(s);\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  shortNameId = uuidv4();\r\n  shortTelId = uuidv4();\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const obj = {\r\n      name,\r\n      number,\r\n    };\r\n    this.props.onSubmit(obj);\r\n    this.reset();\r\n  };\r\n\r\n  reset() {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit, shortNameId, handleChange, shortTelId } = this;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div className={s.Container}>\r\n        <form className={s.Form} onSubmit={handleSubmit}>\r\n          <label htmlFor={shortNameId} className={s.FormTitle}>\r\n            Name\r\n          </label>\r\n          <input\r\n            className={s.FormInput}\r\n            value={name}\r\n            id={shortNameId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <label htmlFor={shortTelId} className={s.FormTitle}>\r\n            Number\r\n          </label>\r\n          <input\r\n            className={s.FormInput}\r\n            value={number}\r\n            id={shortTelId}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <button type=\"submit\" className={s.FormBtn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.ContactList}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={id} id={s.ContactItem}>\r\n          <p className={s.Text}>{name}:</p>\r\n          <p className={s.Text}>{number}</p>\r\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <div className={s.Filter}>\r\n      <label className={s.FilterTitle}>Find contacts by name</label>\r\n      <input type=\"text\" name=\"name\" value={filter} onChange={onChange}></input>\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContacts = info => {\n    const searchSameName = this.state.contacts\n      .map(el => el.name)\n      .includes(info.name);\n\n    if (searchSameName) {\n      alert(`${info.name} is already in contacts`);\n    } else {\n      const newContact = { ...info, id: uuidv4() };\n      this.setState(prev => ({\n        contacts: [newContact, ...prev.contacts],\n      }));\n    }\n  };\n  deleteContact = contactId => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  setFilteredContacts = e => {\n    this.setState({ filter: e.target.value });\n  };\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  render() {\n    const {\n      addContacts,\n      setFilteredContacts,\n      getVisibleContacts,\n      deleteContact,\n    } = this;\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={addContacts} />\n        <h2>Contacts</h2>\n        <Filter filter={this.state.filter} onChange={setFilteredContacts} />\n        <ContactList\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__1akxh\",\"ContactItem\":\"ContactList_ContactItem__2BL35\",\"Text\":\"ContactList_Text__1_-GQ\"};"],"sourceRoot":""}